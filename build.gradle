apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'jetty'
apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.7.7.201606060606" //checked at http://www.eclemma.org/jacoco/
}

//Adding Google java format and sonar pluggins for jdk >= 8
buildscript {
  repositories {
	maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    //classpath "gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.3.2"
     if(JavaVersion.current()>= JavaVersion.VERSION_1_8){
    	classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1"
	}
	classpath "com.netflix.nebula:nebula-ospackage-plugin:3.+"
  }
}

//apply plugin: "com.github.sherter.google-java-format"
if(JavaVersion.current()>= JavaVersion.VERSION_1_8){
	apply plugin: "org.sonarqube"
}


mainClassName = "controller.Application"
//mainClassName = "crypt.CryptCommander"
sourceCompatibility = 1.7
targetCompatibility = 1.7
repositories {
    mavenCentral()
    maven {
    	url 'http://www.janus-project.org/maven'
    }
}

jar {
	manifest {
		attributes 'Implementation-Title': 'SXP network',
				   'Implementation-Version': 1.0
	}
}

sourceSets.main.resources.srcDirs += ["src/main/ressources"]

dependencies {
	compile 'org.apache.commons:commons-collections4:4.0'
	compile 'org.eclipse.jetty:jetty-server:9.2.3.v20140905'
	compile 'org.eclipse.jetty:jetty-servlet:9.2.3.v20140905'
	compile 'org.glassfish.jersey.core:jersey-server:2.7'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.7'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.7'
	compile 'org.glassfish.jersey.containers:jersey-container-jetty-http:2.7'
	compile 'org.glassfish.jersey.media:jersey-media-moxy:2.7'
	compile 'javax:javaee-api:7.0'
	compile 'org.apache.derby:derby:10.12.1.1'
	compile 'org.eclipse.persistence:eclipselink:2.6.3-M1'
	compile 'org.eclipse.persistence:javax.persistence:2.1.1'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
	compile 'com.kenai.jxse:jxse:2.7'
	compile 'org.jdom:jdom2:2.0.6'
	compile fileTree(dir: './libs', include: '*.jar')
	compile 'com.google.guava:guava:19.0'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

[compileJava, compileTestJava]*.options.collect {options -> 
options.encoding = 'UTF-8'} 

eclipse {
  classpath {
    downloadSources = true
    downloadJavadoc = true
  }
}

//Copy dependencies in the libs directory
task libs(type: Sync) {
	from configurations.compile
    from configurations.runtime
    //from configurations.testCompile
    into "$buildDir/libs"
}
build.finalizedBy(libs)

//Define jacoco report tasks
test.finalizedBy(jacocoTestReport)